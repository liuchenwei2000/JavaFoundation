                                                                                           过 滤 流 和 缓 冲 流

在Java中，一些流可以从文件以及其他地方接收字节，另一些流可以将字节组合成更加有用的数据类型。
Java采用将一个已经存在的流传递给另一个流的构造器方法，将这两种流结合起来，结合后的流被称为过滤流(filtered stream)。
例如，为了能够从文件中读取数值，首先创建一个FileInputStream，然后将它传递给一个DataInputStream的构造器：
FileInputStream fin = new FileInputStream("file");
DataInputStream din = new DataInputStream(fin);
double d = din.readDouble();

非常重要的一点是：
利用上面的代码建立的数据输入流并没有与一个新的磁盘文件对应，新创建的流依然通过访问与文件输入流相联系的文件获取数据，但是现在可以使用一种功能更多的接口了。


缓冲流

缓冲输入流从内存缓冲区读取数据，只有当缓冲为空时才调用OS本地的输入流从数据源读取数据。
缓冲输出流将数据从数据源输出到内存缓冲区，只有当缓冲区满的时候才调用OS本地的输出流输出到目的地。
因为每次调用OS本地的输入输出流代价是昂贵的，并且频繁调用对程序而言是低效的，因此当每次向流读写时，
不必每次都进行实际的物理读写动作，所以在进行读写时更经常用到缓冲流。可以使用缓冲流包装类将非缓冲流转换成缓冲流，
其中BufferedInputStream和BufferedOutputStream可以缓冲字节流，BufferedReader和BufferedWriter可以缓冲字符流。
