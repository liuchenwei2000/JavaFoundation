                                                                                                      初 始 化 概 述

                      
每个类的编译代码都存在于它自己的独立的文件中
该文件只在需要使用程序代码时才会被加载                     
类的代码在初次使用时才加载，这通常是指加载发生于创建类的第一个对象之时
但是当访问static域或static方法时，也会发生加载
实际上构造方法也是static方法，尽管static关键字没有显式地写出来
因此更准确地讲，类是在其任何static成员被访问时加载的
所有的static对象和static代码段都会在加载时依程序中的顺序
即定义类时的书写顺序而依次初始化，当然只会被初始化一次               
                    
当创建一个子类的对象时，该对象包含了一个基类的子对象。
这个子对象和用基类直接创建的对象是一样的。
它们的区别在于：后者来自于外部，而基类的对象被包装在子类的对象内部。
Java会自动在导出类的构造器中插入对基类构造器的调用。

对象的创建过程(InitWithinInherit类中有详解)：
1，当首次创建某类的对象时，或者是某类的静态方法/静态字段首次被访问时
Java解释器必须查找类路径，以定位.class文件。
2，然后载入.class，有关静态初始化的所有动作都会执行。
静态初始化只在Class对象首次加载的时候进行一次。
3，当用new创建对象时，首先将在堆上为对象分配足够的存储空间。
4，然后这块存储空间会被清零，自动地将对象中的非静态的所有基本类型数据
都设置成默认值而引用则被设置成null。
5，执行所有出现于字段定义出的初始化动作。
6，执行构造器。