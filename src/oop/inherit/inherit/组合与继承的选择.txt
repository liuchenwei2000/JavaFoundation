                                                                                组 合 与 继 承 的 选 择


组合和继承都允许在新的类中放置子对象，组合是显式地这样做，而继承则是隐式地做

组合技术通常用于想在新类中使用现有类的功能而非它的接口这种情形
即在新类中嵌入某个对象，让其实现所需要的功能
但新类的用户看到的只是为新类所定义的接口，而非所有嵌入对象的接口
为了取得此效果，需要在新类中嵌入一个现有类的private对象
有时，允许类的用户直接访问新类中的组合成分是极具意义的，即将成员对象声明为public
如果成员对象自身都隐藏了具体实现，那么这种做法是安全的
当用户能够了解到你正在组装一组部件时，会使得端口更加易于理解

在继承的时候，使用某个现有类，并开发一个它的特殊版本
这意味着你在使用一个通用类，并为了某种特殊需要而将其特殊化

到底该使用组合还是继承，一个最清晰的判断方法就是
是否需要从新类向基类进行向上转型？
如果必须向上转型则继承是必要的，否则则不是必要的

由于继承可以确保基类中所有的方法在子类中也同样有效
所以能够向基类发送的所有信息同样也可以向子类发送
子类是基类的一个超集，它可能比基类含有更多的方法
但是它必须至少具备基类中所含有的方法，在向上转型的过程中
类接口中唯一可能发生的事情是丢失方法，而不是获取它们