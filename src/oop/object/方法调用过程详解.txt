                                                                                                    方 法 调 用 过 程 详 解


对象调用方法的执行过程：

1，编译器查看对象的声明类型和方法名。
编译器将会一一列举对象所属类中的所有具有该方法名的方法和其超类中访问属性为public且具有该方法名的方法。
至此，编译器已获得所有可能被调用的候选方法。

2，编译器将查看调用方法时提供的参数类型。
如果在1得到的方法中存在一个其参数类型与提供的参数类型完全匹配，那么就调用这个方法。这个过程叫做重载解析。
至此，编译器已获得需要调用的方法的名字和参数类型。

3，如果方法是private、static、final或者构造器，那么编译器将可以准确地知道应该调用哪个方法。
这种调用方式称为静态绑定。与之对应，调用哪个方法将依赖于调用对象的实际类型，并且在运行时动态绑定。

4，当程序运行，并且采用动态绑定调用方法时，JVM会调用与调用对象的实际类型最合适的那个类的方法。
每次调用方法都要进行搜索，时间开销相当大。
因此，JVM预先为每个类创建了一个方法表，其中列出了所有方法的签名和实际调用的方法。
这样在真正调用方法的时候，JVM仅查找这个表就行了。
动态绑定有一个非常重要的特性：无需对现存的代码进行修改，就可以对程序进行扩展。