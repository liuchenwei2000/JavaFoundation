                                                                                    内 部 类 简 介


内部类是一种非常有用的特性，它允许把一些相关的类组织到一起，并控制位于内部的类的可视性

一般说来，内部类继承自某个类或实现某个接口，内部类的代码操作创建它的外部类的对象
所以可以认为内部类提供了某种进入其外部类的窗口

如果只是需要一个对接口的引用，为什么不通过外部类实现这个接口呢？
如果能满足需求，那么就应该这样做。
那么内部类实现一个接口与外部类实现这个接口有什么区别呢？
这是因为后者不是总能享用到接口带来的方便
有时候需要用到接口的实现，所以，使用内部类最吸引人的原因是：
每个内部类都能独立地继承自一个(接口的)实现，所以无论外部类是否
已经继承了某个(接口的)实现，对内部类都没有影响。

如果没有内部类提供的，可以继承多个具体的或抽象的类的能力
一些设计与编程问题就很难解决，内部类使得多重继承的解决方案变得完整
接口解决了部分问题，而内部类有效地解决了多重继承
也就是说，内部类允许继承多个非接口类型(类或抽象类)

如果不需要解决多重继承的问题，那么自然可以使用别的方法编码
而不需要使用内部类，但是如果使用内部类还可以获得其他一些特性：
1，内部类可以有多个实例，每个实例都有自己的状态信息，并且与外部类的对象信息相互独立
2，在单个外部类中，可以让多个内部类以不同的方式实现一个接口(或继承一个类)
3，创建内部类对象的时刻并不依赖于外部类对象的创建
4，内部类没有令人迷惑的"is a"关系，它就是一个独立的实体