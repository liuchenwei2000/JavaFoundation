								异常使用建议


1，异常处理不能代替简单的测试

简单的测试：
if(!s.empty) 
s.pop();

使用异常处理：
try{
s.pop();
}catch(EmptyStackException){
}
与执行简单的测试相比，捕获异常所花费的时间大大超过了前者

2，不要过分地细化异常
最好不要将每条语句都分装在一个单独的try语句块中，而是将它们装在一个try语句块中，使用多个catch语句块捕获异常

3，利用异常层次结构
不要只抛出RuntimeException，应该寻找更加适当的子类或创建自己的异常类
不要只捕获Throwable异常，否则会使代码更加难读，更难维护

4，在检测到错误时，"苛刻"要比放任更好
当检测到错误的时候，是返回一个虚拟的数值还是抛出一个异常？
例如当栈为空时，Stack.pop应返回一个null还是抛出一个异常？
一般在出错的地方抛出一个异常要比后面抛出一个空指针异常(比如)更好。

5，不要羞于传递异常
很多人都感觉应该捕获抛出的全部异常，传递异常要比捕获更好，让更高层次的方法通告用户发生了错误，或者放弃不成功的命令更加适宜。

4、5可以归纳为"早抛出，晚捕获"
