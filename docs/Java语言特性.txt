
Java语言的11个特性：

1，简单性(Simple)
主要体现在语法比较简单，基本的解释器很小。

2，面向对象(Object oriented)
将重点放在数据(即对象)和对象的接口上。

3，分布式(Distributed)
JavaEE是一种独立的体系结构，支持大规模的分布式应用。

4，健壮性(Robust)
Java编译器能够检测出很多在其他语言中只有在运行时刻才能检测出来的问题。
Java中没有指针，不必关心内存分配的问题，是安全的。

5，安全性(Secure)
Java可以防范各种侵袭：禁止运行时堆栈溢出，禁止在自己的处理空间之外破坏内存，未经授权禁止读写文件等等。

6，体系结构中立(跨平台)(Architecture neutral)
编译器生成一个体系结构中立的目标文件格式，这是一种编译过的代码，只要有JRE，就可以在许多处理器上运行。
Java编译器通过生成与特定的计算机体系结构无关的字节码(byte code)指令来实现这一特性。
精心设计的字节码不仅可以很容易地在任何机器上解释执行，而且还可以迅速的翻译成本地机器的代码。
当然，解释字节码肯定会比全速的运行机器指令慢很多。
然而，虚拟机可以将使用最频繁的字节码序列翻译成机器码，这一过程被称为即时编译。
这一策略十分有效，.Net平台也依赖于虚拟机。

7，可移植性(Portable)
Java的数据类型是固定的(如int永远是32位)不依赖于具体的编译器，字符串使用标准的Unicode格式存储的。

8，解释型(interpretable)
Java解释器可以在任何移植了解释器的机器上执行Java字节码。

9，高性能(High performance)
即时编译器(JIT)可以一次把字节码编译成本地代码，并将结果缓存起来，在需要的时候重新调用，从而极大的提高了常用代码的运行速度。

10，多线程(Multithreaded)
多线程可以带来更好的交互响应和实时行为，Java把多线程的实现交给底层的操作系统或线程库来完成。
多线程的简单性是Java成为最受欢迎的服务器端开发语言的主要原因之一。

11，动态性(Dynamic)
动态性允许将某些代码添加到正在运行的程序中。在Java中找到运行时刻类型信息十分直观。 
