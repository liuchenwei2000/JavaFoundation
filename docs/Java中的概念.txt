                   Java 中 的 概 念
Java语言的11个特性：
1，简单性(Simple)
主要体现在语法比较简单，基本的解释器很小。
2，面向对象(Object oriented)
将重点放在数据(即对象)和对象的接口上。
3，分布式(Distributed)
JavaEE是一种独立的体系结构，支持大规模的分布式应用。
4，健壮性(Robust)
Java编译器能够检测出很多在其他语言中只有在运行时刻才能检测出来的问题
Java中没有指针，不必关心内存分配的问题，是安全的。
5，安全性(Secure)
Java可以防范各种侵袭：
禁止运行时堆栈溢出，禁止在自己的处理空间之外破坏内存，未经授权禁止读写文件等等。
6，体系结构中立(跨平台)(Architecture neutral)
编译器生成一个体系结构中立的目标文件格式，这是一种编译过的代码，只要有JRE，就可以在许多处理器上运行。
Java编译器通过生成与特定的计算机体系结构无关的字节码(byte code)指令来实现这一特性。
精心设计的字节码不仅可以很容易地在任何机器上解释执行，而且还可以迅速的翻译成本地机器的代码。
当然，解释字节码肯定会比全速的运行机器指令慢很多。
然而，虚拟机可以将使用最频繁的字节码序列翻译成机器码，这一过程被称为即时编译。
这一策略十分有效，.Net平台也依赖于虚拟机。
7，可移植性(Portable)
Java的数据类型是固定的(如int永远是32位)不依赖于具体的编译器
字符串使用标准的Unicode格式存储的。
8，解释型(interpretable)
Java解释器可以在任何移植了解释器的机器上执行Java字节码。
9，高性能(High performance)
即时编译器(JIT)可以一次把字节码编译成本地代码，并将结果缓存起来
在需要的时候重新调用，从而极大的提高了常用代码的运行速度。
10，多线程(Multithreaded)
多线程可以带来更好的交互响应和实时行为，Java把多线程的实现交给底层的操作系统或线程库来完成。
多线程的简单性是Java成为最受欢迎的服务器端开发语言的主要原因之一。
11，动态性(Dynamic)
动态性允许将某些代码添加到正在运行的程序中。在Java中找到运行时刻类型信息十分直观。 


Java与Internet
基本思想：用户将从Internet上下载Java字节码，并在自己的机器上运行。在网页中运行的Java程序成为applet。
由于浏览器相互不兼容，而且在低速连接网络上下载applet代码的不便性，所以它在Internet上并没有获得巨大的成功。
但是在企业内部网上，情况则完全不同，这里根本不存在带宽问题，可以控制浏览器的类型。
Java开发的中心已经从客户端开发转移到服务器端开发。特别是，应用服务器可以使用JVM的监测能力来执行
自动负载平衡、数据库连接池、对象同步、安全关机与重新启动以及其他的服务。
这样可以提高程序员的编程效率，是程序员的注意力集中到核心功能和程序的业务逻辑上，而不必为服务器的性能操心。


安装JDK
1，下载JDK后安装在某个路径下，在Windows中不要接受带空格的路径名。
2，设置执行路径(执行路径是操作系统搜寻本地可执行文件的目录列表)
我的电脑->属性->高级->环境变量->系统变量->Path->添加上：安装路径/jdk5.0/bin
3，打开dos窗口，使用 java -version 回车后会有jdk的版本信息
4，安装库源代码和文档，库源文件在JDK中是以一个压缩文件src.zip的形式发布
必须将其解压缩后在能访问源代码，将src解压到jdk/src目录下即可
5，jdk文件夹下的各个文件夹的描述
bin：编译器和工具
demo：演示
docs：HTML格式的全部文档
include：用于编译本地方法的文件
jre：JAVA运行环境文件
lib：类库文件
src：类库源文件


Java源代码 -> Java编译器 -> Java字节码 -> Java解释器 -> CPU
后两个构成了JVM

JRE（Java Runtime Environment，Java运行环境）
JRE提供了类库、JVM与其他组件来支持applet和Java应用程序的运行。
另外，JRE拥有两个关键的发布技术：Java Plug-in与Java Web Start
Java Plug-in支持applet运行在大部分浏览器上
Java Web Start则可以将一个独立的应用程序发布到网络上。
JRE同时还是J2EE平台企业级应用开发与部署的支撑技术
但是不包括编译器与调试器等各种工具去支持applet和应用程序的开发。

Java Plug-in
这个技术是JRE的一部分，用于连接浏览器与Java平台。
这个连接使得WEB站点的applets运行在客户端的浏览器中。

Java Web Start
只要拥有相同版本的JRE，独立的Java应用程序就可以通过这个技术发布到网络上。

JDK（Java Development Kit，Java开发工具）
包括了JRE，一堆Java工具和Java基础的类库(rt.jar)

框架：
就是一个类集，它形成了创建高级功能的基础。
框架包含许多超类，这些超类拥有非常有用的功能、策略和机制。
框架用户建立的子类可以扩展类的功能，而不需要重新创建基本的机制。

应用程序框架(Application Framework):
被设计用以解决某类特定问题的一个类或一组类
要运用某个应用程序框架，通常是继承一个或多个类，并覆盖这些方法
再覆盖后的方法中，编写代码定制应用程序框架提供的通用解决方案，以解决特定问题

组件：
重量级组件AWT是根据所在操作系统的类型转成当前系统的GUI的样子. 
就是说如果你用重量级组件那么你在Windows下看到的样子和Linux下看到的样子不一样. 
轻量级组件Swing是Java自己的GUI.所以在所有操作系统下样子都不会改变. 
这就是质的区别. 

Java的平台无关性：
源码文件.java编译生成bytecode文件.class
然后由JVM的一个实例来解释执行，所以可以在有JVM的任何操作系统上执行。
Java Platform包括JVM和JavaAPI
通过DOS模式启动Java Application,先设置环境变量：
我的电脑->属性->高级->环境变量->系统变量->PATH中添加类似于D:\jdk1.5.0_07\bin
然后可以通过DOS模式进行编译和执行。

注：args数组所得到参数的是和java运行命令一行的参数，如java HelloWorld args